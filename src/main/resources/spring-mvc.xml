<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:c="http://www.springframework.org/schema/c"  
    xmlns:util="http://www.springframework.org/schema/util"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:ehcache="http://www.springmodules.org/schema/ehcache"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd  
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd  
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
        http://www.springmodules.org/schema/ehcache http://www.springmodules.org/schema/cache/springmodules-ehcache.xsd">  
    <context:component-scan base-package="com.lhs.*" />
    <!-- 默认的注解映射的支持controller 主要是向BeanFactory注册HandlerMapping和handerAdapt,
    HnglerMapping:将@requestMapping注册到映射表
    HandlerAdapter的实现类，它是处理请求的适配器，说白了，就是确定调用哪个类的哪个方法，并且构造方法参数，返回值。
   	 那么它跟<context:component-scan/>有什么区别呢？<context:component-scan/>标签是告诉Spring 来扫描指定包下的类，并注册被@Component，
    @Controller，@Service，@Repository等注解标记的组件。
       而<mvc:annotation-driven/>是告知Spring，我们启用注解驱动。然后Spring会自动为我们注册上面说到的几个Bean到工厂中，来处理我们的请求。-->
    <mvc:annotation-driven>  
        <!-- <mvc:message-converters>  
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />  
            <bean class="org.springframework.http.converter.FormHttpMessageConverter" />  
            <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />  
            <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />  
        </mvc:message-converters> -->  
    </mvc:annotation-driven>  
          
          
    <!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->  
     <!-- <context:component-scan base-package="com.lhs">   
            <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />   
            <context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
    </context:component-scan>   
    <aop:aspectj-autoproxy proxy-target-class="true">  
        <aop:include name="controllerAspect"/>  
    </aop:aspectj-autoproxy> -->   
      
  
    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->  
    <!-- 支持JSON数据格式 -->  
    <bean  
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter" />  
            </list>  
        </property>  
    </bean>  
    <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
    </bean>  
  
  	<!-- <mvc:default-servlet-handler/> -->
      
    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/jsp/" />  
        <property name="suffix" value=".jsp" /><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->  
    </bean>  
      
</beans>  